{"id":"node_modules/sur/sur.js","dependencies":[{"name":"E:\\hacktiv8\\Phase2\\Week2\\Music 3rd Api\\client\\package.json","includedInParent":true,"mtime":1589089537901},{"name":"E:\\hacktiv8\\Phase2\\Week2\\Music 3rd Api\\client\\node_modules\\sur\\package.json","includedInParent":true,"mtime":1589089537755}],"generated":{"js":"/**\n * @license\n * sur 0.1.1 <https://github.com/bdero/sur/>\n * Copyright (C) 2015  Brandon DeRosier\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n;(function() {\n\n  /**\n   * Creates a `Sur` object which initializes a WebGL context and keeps track\n   * of WebGL state for a given canvas object.\n   *\n   * @name Sur\n   * @constructor\n   * @param {Object} canvas - The canvas element from which to initialize a\n   *  WebGL context.\n   * @param {boolean} [initShaders=true] -  Whether or not to fetch, compile,\n   *  link, and gather metadata about shader programs.\n   * @returns {Object} - Returns the new `Sur` instance.\n   * @example\n   *\n   * var canvas = document.getElementById('#canvas');\n   * var sur = new Sur(canvas);\n   *\n   * _.keys(sur.shaderSets);\n   * // => ['myFirstShaderProgram', 'mySecondShaderProgram']\n   */\n  function Sur(canvas, initShaders) {\n    initShaders = initShaders || true;\n\n    this.canvas = canvas;\n    this.gl = canvas.getContext('webgl') ||\n              canvas.getContext('experimental-webgl');\n\n    if (!this.gl) {\n      throw new Error('The browser isn\\'t WebGL enabled');\n    }\n\n    if (initShaders) {\n      this.shaderSets = Sur.fetchShaders();\n      Sur.compileShaderSets(this.gl, this.shaderSets);\n    }\n  }\n\n  /** The name used to identify vertex shaders. */\n  Sur.VERTEX_SHADER_TYPE = 'vertex-shader';\n\n  /** The name used to identify fragment shaders. */\n  Sur.FRAGMENT_SHADER_TYPE = 'fragment-shader';\n\n  /**\n   * Array containing the script type identifiers of vertex and fragment\n   * shaders.\n   */\n  Sur.SCRIPT_TYPES = [Sur.VERTEX_SHADER_TYPE, Sur.FRAGMENT_SHADER_TYPE];\n\n  /**\n   * Fetch shaders from the document, grouping them into sets by program name\n   */\n  Sur.fetchShaders = function() {\n    return _.chain(document.getElementsByTagName('script')).\n      filter(function(script) {\n        // Filter out any non-shader scripts\n        return _.contains(Sur.SCRIPT_TYPES, script.type);\n      }).\n      reduce(function(result, script) {\n        var name = script.dataset.name;\n\n        if (name) {\n          // If this shader has a program name that doesn't exist yet, add it\n          if (!_.contains(_.keys(result), name)) {\n            result[name] = {};\n          }\n          // Add this shader to it's program, accessible by it's type\n          // (i.e. vertex or fragment shader)\n          result[name][script.type] = {};\n          result[name][script.type].text = script.text;\n        }\n        return result;\n      }, {}).\n      value();\n  };\n\n  Sur.compileShader = function(gl, shader, type) {\n    var result = gl.createShader(type);\n\n    gl.shaderSource(result, shader);\n    gl.compileShader(result);\n\n    if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n      throw new Error(\n        \"Shader compilation error; \" + gl.getShaderInfoLog(result)\n      );\n    }\n\n    return result;\n  };\n\n  Sur.linkProgram = function(gl, shaderSet) {\n    var program = gl.createProgram();\n\n    gl.attachShader(program, shaderSet[Sur.VERTEX_SHADER_TYPE].shader);\n    gl.attachShader(program, shaderSet[Sur.FRAGMENT_SHADER_TYPE].shader);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\"Program link error; \" + gl.getProgramInfoLog(program));\n    }\n\n    shaderSet.program = program;\n  };\n\n  Sur.bakeProgramParameters = function(gl, shaderSet) {\n    var parameters = [\n      ['attributes', gl.ACTIVE_ATTRIBUTES, 'Attrib'],\n      ['uniforms', gl.ACTIVE_UNIFORMS, 'Uniform'],\n    ];\n    var program = shaderSet.program;\n\n    _.each(parameters, function(parameter) {\n      var parameterCount = gl.getProgramParameter(program, parameter[1]);\n\n      shaderSet[parameter[0]] = _.zipObject(\n        _.times(parameterCount, function(count) {\n          var parameterName = gl['getActive' + parameter[2]](\n            program, count\n          ).name;\n          var parameterValue = gl['get' + parameter[2] + 'Location'](\n            program, parameterName\n          );\n\n          return [parameterName, parameterValue];\n        })\n      );\n    });\n  };\n\n  /**\n   * Compiles a set of related shaders, links a program, and extracts it's\n   * parameters\n   */\n  Sur.compileShaderSet = function(gl, shaderSet) {\n    if (!_.isMatch(_.keys(shaderSet), Sur.SCRIPT_TYPES)) {\n      throw new Error(\n        'Missing shader! Shader sets require both a vertex and a fragment ' +\n        'shader'\n      );\n    }\n\n    var shaderTypes = [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER];\n\n    _.each(_.zip(Sur.SCRIPT_TYPES, shaderTypes), function(type) {\n      var shaderId = Sur.compileShader(gl, shaderSet[type[0]].text, type[1]);\n      shaderSet[type[0]].shader = shaderId;\n    });\n\n    Sur.linkProgram(gl, shaderSet);\n    Sur.bakeProgramParameters(gl, shaderSet);\n  };\n\n  Sur.compileShaderSets = function(gl, shaderSets) {\n    if (!_.isObject(shaderSets)) {\n      throw new Error('Expected `shaderSets` to be an object');\n    }\n\n    _.each(shaderSets, function(shaderSet) {\n      return Sur.compileShaderSet(gl, shaderSet);\n    });\n  };\n\n  /**\n   * Starts an update loop using requestAnimationFrame, passing the callback a\n   * delta time multiplier.\n   *\n   * @param {updateCallback} callback - Callback called for every update.\n   * @example\n   *\n   * // Calculate velocity and position on a units/second basis\n   * Sur.update(function(delta) {\n   *   velocity += acceleration*delta;\n   *   position += velocity*delta;\n   *\n   *   // ... render scene ...\n   * });\n   *\n   * // Stop the loop after 20 frames\n   * var frame = 0;\n   * Sur.update(function() {\n   *   console.debug(++frame);\n   *   return frame < 20;\n   * });\n   */\n  Sur.update = function(callback) {\n    var currentTime = Date.now();\n    var previousTime;\n\n    var loop = function() {\n      previousTime = currentTime;\n      currentTime = Date.now();\n      var delta = (currentTime - previousTime)/1000;\n\n      // If the callback returns anything except false, continue running\n      if (callback(delta) !== false) {\n        requestAnimationFrame(loop);\n      }\n    };\n\n    loop();\n  };\n\n  /**\n   * Called on every requestAnimationFrame tick.\n   *\n   * @callback updateCallback\n   * @param {number} delta - The amount of time, in seconds, elapsed since the\n   *  last update call.\n   * @returns {boolean} continue - Returns whether or not to continue executing\n   *  the callback loop. Any return value other than `false` will result in the\n   *  loop continuing execution (including no return value or `undefined`).\n   */\n\n  // Place Sur into the global scope\n  window.Sur = Sur;\n\n})();\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sur/sur.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/sur/sur.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}}],"sources":{"node_modules/sur/sur.js":"/**\n * @license\n * sur 0.1.1 <https://github.com/bdero/sur/>\n * Copyright (C) 2015  Brandon DeRosier\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n;(function() {\n\n  /**\n   * Creates a `Sur` object which initializes a WebGL context and keeps track\n   * of WebGL state for a given canvas object.\n   *\n   * @name Sur\n   * @constructor\n   * @param {Object} canvas - The canvas element from which to initialize a\n   *  WebGL context.\n   * @param {boolean} [initShaders=true] -  Whether or not to fetch, compile,\n   *  link, and gather metadata about shader programs.\n   * @returns {Object} - Returns the new `Sur` instance.\n   * @example\n   *\n   * var canvas = document.getElementById('#canvas');\n   * var sur = new Sur(canvas);\n   *\n   * _.keys(sur.shaderSets);\n   * // => ['myFirstShaderProgram', 'mySecondShaderProgram']\n   */\n  function Sur(canvas, initShaders) {\n    initShaders = initShaders || true;\n\n    this.canvas = canvas;\n    this.gl = canvas.getContext('webgl') ||\n              canvas.getContext('experimental-webgl');\n\n    if (!this.gl) {\n      throw new Error('The browser isn\\'t WebGL enabled');\n    }\n\n    if (initShaders) {\n      this.shaderSets = Sur.fetchShaders();\n      Sur.compileShaderSets(this.gl, this.shaderSets);\n    }\n  }\n\n  /** The name used to identify vertex shaders. */\n  Sur.VERTEX_SHADER_TYPE = 'vertex-shader';\n\n  /** The name used to identify fragment shaders. */\n  Sur.FRAGMENT_SHADER_TYPE = 'fragment-shader';\n\n  /**\n   * Array containing the script type identifiers of vertex and fragment\n   * shaders.\n   */\n  Sur.SCRIPT_TYPES = [Sur.VERTEX_SHADER_TYPE, Sur.FRAGMENT_SHADER_TYPE];\n\n  /**\n   * Fetch shaders from the document, grouping them into sets by program name\n   */\n  Sur.fetchShaders = function() {\n    return _.chain(document.getElementsByTagName('script')).\n      filter(function(script) {\n        // Filter out any non-shader scripts\n        return _.contains(Sur.SCRIPT_TYPES, script.type);\n      }).\n      reduce(function(result, script) {\n        var name = script.dataset.name;\n\n        if (name) {\n          // If this shader has a program name that doesn't exist yet, add it\n          if (!_.contains(_.keys(result), name)) {\n            result[name] = {};\n          }\n          // Add this shader to it's program, accessible by it's type\n          // (i.e. vertex or fragment shader)\n          result[name][script.type] = {};\n          result[name][script.type].text = script.text;\n        }\n        return result;\n      }, {}).\n      value();\n  };\n\n  Sur.compileShader = function(gl, shader, type) {\n    var result = gl.createShader(type);\n\n    gl.shaderSource(result, shader);\n    gl.compileShader(result);\n\n    if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n      throw new Error(\n        \"Shader compilation error; \" + gl.getShaderInfoLog(result)\n      );\n    }\n\n    return result;\n  };\n\n  Sur.linkProgram = function(gl, shaderSet) {\n    var program = gl.createProgram();\n\n    gl.attachShader(program, shaderSet[Sur.VERTEX_SHADER_TYPE].shader);\n    gl.attachShader(program, shaderSet[Sur.FRAGMENT_SHADER_TYPE].shader);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\"Program link error; \" + gl.getProgramInfoLog(program));\n    }\n\n    shaderSet.program = program;\n  };\n\n  Sur.bakeProgramParameters = function(gl, shaderSet) {\n    var parameters = [\n      ['attributes', gl.ACTIVE_ATTRIBUTES, 'Attrib'],\n      ['uniforms', gl.ACTIVE_UNIFORMS, 'Uniform'],\n    ];\n    var program = shaderSet.program;\n\n    _.each(parameters, function(parameter) {\n      var parameterCount = gl.getProgramParameter(program, parameter[1]);\n\n      shaderSet[parameter[0]] = _.zipObject(\n        _.times(parameterCount, function(count) {\n          var parameterName = gl['getActive' + parameter[2]](\n            program, count\n          ).name;\n          var parameterValue = gl['get' + parameter[2] + 'Location'](\n            program, parameterName\n          );\n\n          return [parameterName, parameterValue];\n        })\n      );\n    });\n  };\n\n  /**\n   * Compiles a set of related shaders, links a program, and extracts it's\n   * parameters\n   */\n  Sur.compileShaderSet = function(gl, shaderSet) {\n    if (!_.isMatch(_.keys(shaderSet), Sur.SCRIPT_TYPES)) {\n      throw new Error(\n        'Missing shader! Shader sets require both a vertex and a fragment ' +\n        'shader'\n      );\n    }\n\n    var shaderTypes = [gl.VERTEX_SHADER, gl.FRAGMENT_SHADER];\n\n    _.each(_.zip(Sur.SCRIPT_TYPES, shaderTypes), function(type) {\n      var shaderId = Sur.compileShader(gl, shaderSet[type[0]].text, type[1]);\n      shaderSet[type[0]].shader = shaderId;\n    });\n\n    Sur.linkProgram(gl, shaderSet);\n    Sur.bakeProgramParameters(gl, shaderSet);\n  };\n\n  Sur.compileShaderSets = function(gl, shaderSets) {\n    if (!_.isObject(shaderSets)) {\n      throw new Error('Expected `shaderSets` to be an object');\n    }\n\n    _.each(shaderSets, function(shaderSet) {\n      return Sur.compileShaderSet(gl, shaderSet);\n    });\n  };\n\n  /**\n   * Starts an update loop using requestAnimationFrame, passing the callback a\n   * delta time multiplier.\n   *\n   * @param {updateCallback} callback - Callback called for every update.\n   * @example\n   *\n   * // Calculate velocity and position on a units/second basis\n   * Sur.update(function(delta) {\n   *   velocity += acceleration*delta;\n   *   position += velocity*delta;\n   *\n   *   // ... render scene ...\n   * });\n   *\n   * // Stop the loop after 20 frames\n   * var frame = 0;\n   * Sur.update(function() {\n   *   console.debug(++frame);\n   *   return frame < 20;\n   * });\n   */\n  Sur.update = function(callback) {\n    var currentTime = Date.now();\n    var previousTime;\n\n    var loop = function() {\n      previousTime = currentTime;\n      currentTime = Date.now();\n      var delta = (currentTime - previousTime)/1000;\n\n      // If the callback returns anything except false, continue running\n      if (callback(delta) !== false) {\n        requestAnimationFrame(loop);\n      }\n    };\n\n    loop();\n  };\n\n  /**\n   * Called on every requestAnimationFrame tick.\n   *\n   * @callback updateCallback\n   * @param {number} delta - The amount of time, in seconds, elapsed since the\n   *  last update call.\n   * @returns {boolean} continue - Returns whether or not to continue executing\n   *  the callback loop. Any return value other than `false` will result in the\n   *  loop continuing execution (including no return value or `undefined`).\n   */\n\n  // Place Sur into the global scope\n  window.Sur = Sur;\n\n})();\n"},"lineCount":238}},"error":null,"hash":"bd66567a96fd43462333748771e0226f","cacheData":{"env":{}}}